# 	vulnerability_function.rb, 
# => deal with the vulnerability function.
require './model_of_vulnerability'


class VulnerabilityFunction
	include ModelOfVulnerability
	attr_accessor :func_value
	def initialize(func_name='')
		@func_name = func_name
		@func_value = Array.new
	end

	def get_funcid_by_funcname(_func_name='')
		db_get_funcid_by_funcname(_func_name)
	end
	def get_valueid_by_funcid(_func_id=0)
		db_get_valueid_by_funcid(_func_id)
	end
	def get_value_by_valueid(_value_id=0)
		db_get_value_by_valueid(_value_id)
	end
	def get_value_by_funcname(_func_name='')
		@func_value = []
		res_funcid = get_funcid_by_funcname(_func_name)
		if res_funcid == 0
			puts 'nosense'
		else
			res_valueid_array = get_valueid_by_funcid(res_funcid)
			res_valueid_array.each do |v|
				@func_value << get_value_by_valueid(v)
			end
			@func_value
		end
	end

	# get the function_name and the file_name that use the vulnerability function
	def get_info_of_funcname(_func_name='')
		db_get_info_of_funcname(_func_name)
	end
end

